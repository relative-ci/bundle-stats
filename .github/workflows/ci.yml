name: ci
on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Cache packages when the branch is not update-dependencies or dependabot/*
      - name: Resolve caching
        id: cache
        if: ${{ github.ref_name != 'update-dependencies' && !startsWith(github.ref_name, 'dependabot/') }}
        run: echo "PACKAGE=npm" >> $GITHUB_OUTPUT

      - name: Use Node.js
        uses: actions/setup-node@v3.7.0
        with:
          node-version-file: ".nvmrc"
          cache: ${{ steps.cache.outputs.PACKAGE }}

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Upload webpack stats file
        uses: relative-ci/agent-upload-artifact-action@v1
        with:
          webpackStatsFile: ./packages/html-templates/artifacts/webpack-stats.json

      - name: Upload build files
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          retention-days: 1
          # add glob on the first directory to force paths relative to current directory
          path: |
            packages*/*/lib/**
            packages*/*/lib-esm/**
            packages*/*/dist/**
            packages*/*/types/**

  lint:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Cache packages when the branch is not update-dependencies or dependabot/*
      - name: Resolve caching
        id: cache
        if: ${{ github.ref_name != 'update-dependencies' && !startsWith(github.ref_name, 'dependabot/') }}
        run: echo "PACKAGE=npm" >> $GITHUB_OUTPUT

      - name: Use Node.js
        uses: actions/setup-node@v3.7.0
        with:
          node-version-file: ".nvmrc"
          cache: ${{ steps.cache.outputs.PACKAGE }}

      - name: Install dependencies
        run: npm ci

      - name: Download build files
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Lint
        run: npm run lint

  test-unit:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Cache packages when the branch is not update-dependencies or dependabot/*
      - name: Resolve caching
        id: cache
        if: ${{ github.ref_name != 'update-dependencies' && !startsWith(github.ref_name, 'dependabot/') }}
        run: echo "PACKAGE=npm" >> $GITHUB_OUTPUT

      - name: Use Node.js
        uses: actions/setup-node@v3.7.0
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Download build files
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Test
        run: npm test

  test-e2e:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3.7.0
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Download build files
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Report E2E tests - install dependencies
        working-directory: packages/cli
        run: npx playwright install --with-deps

      - name: Report E2E tests - run
        working-directory: packages/cli
        run: npm run test:e2e

      - name: Report E2E tests - upload screenshots
        if: ${{ !startsWith(github.ref, 'refs/tags/') }}
        continue-on-error: true
        working-directory: packages/cli
        run: node node_modules/.bin/argos upload ./screenshots

  test-package-cli:
    needs:
      - build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version: [20, 18, 16, 14]
    steps:
      - uses: actions/checkout@v3

      # Cache packages when the branch is not update-dependencies or dependabot/*
      - name: Resolve caching
        id: cache
        if: ${{ github.ref_name != 'update-dependencies' && !startsWith(github.ref_name, 'dependabot/') }}
        run: echo "PACKAGE=npm" >> $GITHUB_OUTPUT

      - name: Use Node.js
        uses: actions/setup-node@v3.7.0
        with:
          node-version: ${{ matrix.version }}
          cache: "npm"
          registry-url: 'https://registry.npmjs.org'

      - name: Download build files
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Install dependencies
        run: npm install -g lerna@6.6.2 verdaccio@5.26.1

      - name: Run local npm registry
        run: ./scripts/local-registry.sh &

      - name: Publish bundle-stats packages locally
        run: sleep 20 && ./scripts/local-registry-publish.sh

      - name: Test package
        run: npm run test:package
        working-directory: packages/cli

  test-package-webpack-plugin:
    needs:
      - build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        version: [20, 18, 16, 14]
        webpack: ['webpack4', 'webpack5']
        exclude:
          - webpack: 'webpack4'
            version: 18
          - webpack: 'webpack4'
            version: 20
    steps:
      - uses: actions/checkout@v3

      # Cache packages when the branch is not update-dependencies or dependabot/*
      - name: Resolve caching
        id: cache
        if: ${{ github.ref_name != 'update-dependencies' && !startsWith(github.ref_name, 'dependabot/') }}
        run: echo "PACKAGE=npm" >> $GITHUB_OUTPUT

      - name: Use Node.js
        uses: actions/setup-node@v3.7.0
        with:
          node-version: ${{ matrix.version }}
          cache: "npm"
          registry-url: 'https://registry.npmjs.org'

      - name: Download build files
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - name: Install dependencies
        run: npm install -g lerna@6.6.2 verdaccio@5.26.1

      - name: Run local npm registry
        run: ./scripts/local-registry.sh &

      - name: Publish bundle-stats packages locally
        run: sleep 20 && ./scripts/local-registry-publish.sh

      - name: Test package
        run: npm run test:package -- -t ${{ matrix.webpack }}
        working-directory: packages/webpack-plugin

  tests:
    needs:
      - lint
      - test-unit
      - test-e2e
      - test-package-cli
      - test-package-webpack-plugin
    runs-on: ubuntu-latest
    steps:
      - run: echo "Tests done."

  publish:
    # Run only for version tags
    if: contains(github.ref, 'refs/tags/v')
    needs:
      - tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3.7.0
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
          registry-url: 'https://registry.npmjs.org'

      - name: Install monorepo dependencies
        run: npm ci

      - name: Download build
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      - run: npm run release
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
