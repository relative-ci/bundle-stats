name: build
on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    # Cache packages when the branch is not update-dependencies or dependabot/*
    - name: Resolve caching
      id: cache
      if: ${{ github.ref_name != 'update-dependencies' && !startsWith(github.ref_name, 'dependabot/') }}
      run: echo "::set-output name=PACKAGE::npm"

    - name: Use Node.js
      uses: actions/setup-node@v3.6.0
      with:
        node-version-file: ".nvmrc"
        cache: ${{ steps.cache.outputs.PACKAGE }}
        cache-dependency-path: "**/package-lock.json"

    - name: Install dependencies
      run: npm ci && npx lerna bootstrap --hoist

    - name: Build
      run: npm run build

    - name: Upload webpack stats artifact
      uses: relative-ci/agent-upload-artifact-action@v1
      with:
        webpackStatsFile: ./packages/html-templates/artifacts/webpack-stats.json

    - name: Lint
      run: npm run lint

    - name: Test
      run: npm test

    - name: Test webpack-plugin package
      run: npm run test-package

    - name: Report E2E tests - install dependencies
      working-directory: packages/cli
      run: npx playwright install --with-deps

    - name: Report E2E tests - run
      working-directory: packages/cli
      run: npm run test:e2e

    - name: Report E2E tests - upload screenshots
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      continue-on-error: true
      working-directory: packages/cli
      run: node node_modules/.bin/argos upload ./screenshots

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-artifacts
        retention-days: 1
        # add glob on the first directory to force paths relative to current directory
        path: |
          packages*/*/lib/**
          packages*/*/lib-esm/**
          packages*/*/dist/**
          packages*/*/types/**

  publish:
    needs:
      - test

    if: contains(github.ref, 'refs/tags/v')

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js
      uses: actions/setup-node@v3.6.0
      with:
        node-version-file: ".nvmrc"
        cache: "npm"
        cache-dependency-path: "**/package-lock.json"
        registry-url: 'https://registry.npmjs.org'

    - name: Install monorepo dependencies
      run: npm ci

    - name: Download build
      uses: actions/download-artifact@v3
      with:
        name: build-artifacts

    - run: npm run release
      env:
        NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
